{
    "Modeling and Impact":{
        "Program Level": "Understand, guide, shape impact of computing on society/the world",
        "Theory":" Modeling & Application: Connect the role of theory to other applications (in undergraduate CS curriculum and beyond). Model problems using appropriate mathematical concepts",
        "Children":{
                        "Modeling": {
                                        "Description": "Model systems with tools from discrete mathematics and reason about implications of modelling choices",
                                        "Children": {}
                        },
                        "Boolean Operations": {
                                        "Description" : "Relate boolean operations to applications, e.g. set operations and combinatorial circuits.",
                                        "Children":{
                                            "XOR and Bit Shifts":"Correctly use XOR and bit shifts",
                                            "Clustering":"Define clustering as an application of relations and partitions"
                                        }
                        }


        }
        

    },

    "Problem Solving":{
        "Program Level": "Reason about computation and systems ~~ Technical skepticism",
        "Theory": "Use mathematical techniques to solve problems. Determine appropriate conceptual tools to apply to new situations. Know when tools do not apply and try different approaches. Critically analyze and evaluate candidate solutions.",
        "Children": { 
            "Propositional Logic": {
                "Description": "Reason about the truth or falsity of complicated statements using Boolean connectives, quantifiers, and basic definitions.",
                "Children": {
                    "Truth Tables": "Prove propositional equivalences using truth tables.",
                    "Laws or Known Propositional Logic": "Prove propositional equivalences using other known equivalences, e.g. DeMorganâ€™s laws, Double negation laws, Distributive laws, etc.",
                    "Consistency": "Decide and justify whether or not a collection of propositions is consistent.",
                    "Domain Elements": "Describe the set of domain elements that make a predicate with one input evaluate to true",
                    "Universal and Existential Statements": "Evaluate universal and existential statements about finite domains (with no quantifier alternations)."
                }
            },

            "Proof Techniques": {
                "Description": "Apply proof techniques, including direct proofs and proofs by contradiction.",
                "Children": {
                    "Infinite Domains": "Counterexample and witness-based arguments for predicates with infinite domains",
                    "Nested Quantifiers": "Counterexample and witness-based arguments for nested quantifiers (both alternating and not)."
                }
            },

            "Valid and Invalid Arguments": {
                "Description": "Distinguish valid from invalid arguments.",
                "Children": {
                    "Quantified Statement": "Determine what evidence is required to establish that a quantified statement is true or false.",
                    "Proposition and its Proof Strategies": "Identify the main connective of a proposition and associated proof strategies"
                }
            },

            "Craft Proofs": {
                "Description": "Craft proofs and arguments at different levels of formality, including prose and symbolic notation as appropriate.",
                "Children": {
                    "Universal Generalization": "Use universal generalization to prove that universal statements are true.",
                    "Using Proofs to Evaluate Propositions": "Determine whether a proposition is true or false using valid reasoning (proofs) in multiple contexts.",
                    "Recursively Defined Sets and Functions": "Practice with properties of recursively defined sets and functions.",
                    "Proofs with Recursively Defined Sets and Functions": "Prove and disprove properties of recursively defined sets and functions with structural induction and/ or mathematical induction.",
                    "Induction Types": "Distinguish between and use as appropriate each of structural induction, mathematical induction, and strong induction.",
                    "Proof Technique": "Evaluate which proof technique(s) is appropriate for a given proposition",
                    "Proof by Contradiction": "Trace and/or construct a proof by contradiction.",
                    "Mathematical Induction": "Use mathematical induction to prove statements about mathematical identities and inequalities.",
                    "Structural Induction"

                    
                }
            },

            "Binary Relations": {
                "Description": "",
                "Children": {
                    
                }
            },

            "Modular Arithmetic": {
                "Description": "",
                "Children": {
                    
                }
            },

            "Sets, Functions, and Relations Proof": {
                "Description": "",
                "Children": {
                    
                }
            }
        }

    },

    "Communication":{

    }

}

